export type Locale = 'ru' | 'en'

const translations = {
  ru: {
    sign: '–í—Ö–æ–¥',
    sign_with_git: '–í–æ–π—Ç–∏ —Å –ø–æ–º–æ—â—å—é Github',
    sign_with_goog: '–í–æ–π—Ç–∏ —Å –ø–æ–º–æ—â—å—é Google',
    projects_title: '–ü—Ä–æ–µ–∫—Ç—ã',
    create_project: '–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç',
    sign_out: '–í—ã–π—Ç–∏',
    no_projects: '–ü—Ä–æ–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.',
    start_end: 'üìÖ {{start}} ‚Äî {{end}}',
    completed: '–í—ã–ø–æ–ª–Ω–µ–Ω–æ: {{progress}}%',
    created: '–°–æ–∑–¥–∞–Ω: {{date}}',
    delete: '–£–¥–∞–ª–∏—Ç—å',
    unauthorized: '–î–æ—Å—Ç—É–ø –≤–æ—Å–ø—Ä–µ—â—ë–Ω.',
    sign_in: '–í–æ–π—Ç–∏',
    name: '–ù–∞–∑–≤–∞–Ω–∏–µ',
    description: '–û–ø–∏—Å–∞–Ω–∏–µ',
    startDate: '–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞',
    endDate: '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è',
    save: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å',
    ai_chat_title: 'ü§ñ AI-–ß–∞—Ç',
    chat_with_ai: '–ß–∞—Ç —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é',
    theme: '–¢–µ–º–∞',
    switch_language: '–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫'
  },
  en: {
    sign: 'Sign in',
    sign_with_git: 'Sign with Github',
    sign_with_goog: 'Sign with Google',
    projects_title: 'Projects',
    create_project: 'Create Project',
    sign_out: 'Sign Out',
    no_projects: 'No projects found.',
    start_end: 'üìÖ {{start}} ‚Äî {{end}}',
    completed: 'Completed: {{progress}}%',
    created: 'Created: {{date}}',
    delete: 'Delete',
    unauthorized: 'Access denied.',
    sign_in: 'Sign In',
    name: 'Name',
    description: 'Description',
    startDate: 'Start Date',
    endDate: 'End Date',
    save: 'Save',
    ai_chat_title: 'ü§ñ AI Chat',
    chat_with_ai: 'Chat with AI',
    theme: 'Theme',
    switch_language: 'Switch language'
  }
}

type TranslationKey = keyof typeof translations['ru']

export function t (
  key: TranslationKey,
  locale: Locale = 'en',
  vars: Record<string, string> = {}
): string {
  const template = translations[locale][key] || key
  return template.replace(
    /{{(.*?)}}/g,
    (_, varName) => vars[varName.trim()] ?? ''
  )
}
